{"version":3,"file":"firebase-storage.js","sources":["../../node_modules/tslib/tslib.es6.js","../storage/src/implementation/constants.ts","../storage/src/implementation/error.ts","../storage/src/implementation/string.ts","../storage/src/implementation/taskenums.ts","../storage/src/implementation/xhrio.ts","../storage/src/implementation/object.ts","../storage/src/implementation/promise_external.ts","../storage/src/implementation/type.ts","../storage/src/implementation/xhrio_network.ts","../storage/src/implementation/xhriopool.ts","../storage/src/implementation/json.ts","../storage/src/implementation/location.ts","../storage/src/implementation/path.ts","../storage/src/implementation/url.ts","../storage/src/implementation/metadata.ts","../storage/src/implementation/list.ts","../storage/src/implementation/args.ts","../storage/src/implementation/fs.ts","../storage/src/implementation/blob.ts","../storage/src/implementation/array.ts","../storage/src/implementation/requestinfo.ts","../storage/src/implementation/requests.ts","../storage/src/implementation/observer.ts","../storage/src/tasksnapshot.ts","../storage/src/implementation/async.ts","../storage/src/task.ts","../storage/src/reference.ts","../storage/src/implementation/failrequest.ts","../storage/src/implementation/requestmap.ts","../storage/src/implementation/authwrapper.ts","../storage/src/implementation/request.ts","../storage/src/implementation/backoff.ts","../storage/src/service.ts","../storage/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST: string = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY: string = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME: number = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME: number = 10 * 60 * 100;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER: number = -9007199254740991;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\nexport class FirebaseStorageError implements Error {\n  private code_: string;\n  private message_: string;\n  private serverResponse_: string | null;\n  private name_: string;\n\n  constructor(code: Code, message: string) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n\n  codeProp(): string {\n    return this.code;\n  }\n\n  codeEquals(code: Code): boolean {\n    return prependCode(code) === this.codeProp();\n  }\n\n  serverResponseProp(): string | null {\n    return this.serverResponse_;\n  }\n\n  setServerResponseProp(serverResponse: string | null) {\n    this.serverResponse_ = serverResponse;\n  }\n\n  get name(): string {\n    return this.name_;\n  }\n\n  get code(): string {\n    return this.code_;\n  }\n\n  get message(): string {\n    return this.message_;\n  }\n\n  get serverResponse(): null | string {\n    return this.serverResponse_;\n  }\n}\n\nexport const errors = {};\n\n/**\n * @enum {string}\n */\nexport type Code = string;\nexport const Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\n\nexport function prependCode(code: Code): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): FirebaseStorageError {\n  let message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): FirebaseStorageError {\n  let message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nexport function unauthorized(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\nexport function invalidArgument(\n  index: number,\n  fnName: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_ARGUMENT,\n    'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message\n  );\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): FirebaseStorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new FirebaseStorageError(\n    Code.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name The name of the operation that was invalid.\n */\nexport function invalidRootOperation(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format The format that was not valid.\n * @param message A message describing the format violation.\n */\nexport function invalidFormat(\n  format: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message A message describing the internal error.\n */\nexport function internalError(message: string): FirebaseStorageError {\n  throw new FirebaseStorageError(\n    Code.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport { errors } from './error';\n\n/**\n * @enum {string}\n */\nexport type StringFormat = string;\nexport const StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nexport function formatValidator(stringFormat: string) {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n    default:\n      throw 'Expected one of the event types: [' +\n        StringFormat.RAW +\n        ', ' +\n        StringFormat.BASE64 +\n        ', ' +\n        StringFormat.BASE64URL +\n        ', ' +\n        StringFormat.DATA_URL +\n        '].';\n  }\n}\n\n/**\n * @struct\n */\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, opt_contentType?: string | null) {\n    this.contentType = opt_contentType || null;\n  }\n}\n\nexport function dataFromString(\n  format: StringFormat,\n  string: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(string));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, string));\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(string), dataURLContentType_(string));\n  }\n\n  // assert(false);\n  throw errorsExports.unknown();\n}\n\nexport function utf8Bytes_(string: string): Uint8Array {\n  let b: number[] = [];\n  for (let i = 0; i < string.length; i++) {\n    let c = string.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) == 55296) {\n          // The start of a surrogate pair.\n          let valid =\n            i < string.length - 1 &&\n            (string.charCodeAt(i + 1) & 64512) == 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            let hi = c;\n            let lo = string.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) == 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(string: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(string);\n  } catch (e) {\n    throw errorsExports.invalidFormat(\n      StringFormat.DATA_URL,\n      'Malformed data URL.'\n    );\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, string: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      let hasMinus = string.indexOf('-') !== -1;\n      let hasUnder = string.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        let invalidChar = hasMinus ? '-' : '_';\n        throw errorsExports.invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      let hasPlus = string.indexOf('+') !== -1;\n      let hasSlash = string.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        let invalidChar = hasPlus ? '+' : '/';\n        throw errorsExports.invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      string = string.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n  }\n  let bytes;\n  try {\n    bytes = atob(string);\n  } catch (e) {\n    throw errorsExports.invalidFormat(format, 'Invalid character found');\n  }\n  let array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\n/**\n * @struct\n */\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    let matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw errorsExports.invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    let middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(string: string): Uint8Array {\n  let parts = new DataURLParts(string);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(string: string): string | null {\n  let parts = new DataURLParts(string);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * Enum for task events.\n * @enum {string}\n */\nexport type TaskEvent = string;\nexport const TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n * @enum {string}\n */\nexport type InternalTaskState = string;\nexport const InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\n\n/**\n * External (API-surfaced) enum for task state.\n * @enum {string}\n */\nexport type TaskState = string;\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n */\n\nexport type Headers = { [name: string]: string | number };\n\nexport interface XhrIo {\n  send(\n    url: string,\n    method: string,\n    opt_body?: ArrayBufferView | Blob | string | null,\n    opt_headers?: Headers\n  ): Promise<XhrIo>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponseText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: Event) => void): void;\n\n  removeUploadProgressListener(listener: (p1: Event) => void): void;\n}\n\n/**\n * @enum{number}\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains methods for working with objects.\n */\nexport function contains(obj: Object, prop: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport function forEach<T>(\n  obj: { [key: string]: T },\n  f: (p1: string, p2: T) => void\n) {\n  for (let key in obj) {\n    if (contains(obj, key)) {\n      f(key, obj[key]);\n    }\n  }\n}\n\nexport function clone<T>(obj?: { [key: string]: any } | null): T {\n  if (obj == null) {\n    return {} as T;\n  }\n\n  let c: { [name: string]: any } = {};\n  forEach(obj, function(key, val) {\n    c[key] = val;\n  });\n  return c as T;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements the promise abstraction interface for external\n * (public SDK) packaging, which just passes through to the firebase-app impl.\n */\n\n/**\n * @template T\n * @param {function((function(T): void),\n *                  (function(!Error): void))} resolver\n */\n\nexport function make<T>(\n  resolver: (p1: (p1: T) => void, p2: (p1: Error) => void) => void\n): Promise<T> {\n  return new Promise(resolver);\n}\n\n/**\n * @template T\n */\nexport function resolve<T>(value: T): Promise<T> {\n  return Promise.resolve(value) as Promise<T>;\n}\n\nexport function reject<T>(error: Error): Promise<T> {\n  return Promise.reject(error) as Promise<T>;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @return False if the object is undefined or null, true otherwise.\n */\nexport function isDef(p: any): boolean {\n  return p != null;\n}\n\nexport function isJustDef(p: any): boolean {\n  return p !== void 0;\n}\n\nexport function isFunction(p: any): boolean {\n  return typeof p === 'function';\n}\n\nexport function isObject(p: any): boolean {\n  return typeof p === 'object';\n}\n\nexport function isNonNullObject(p: any): boolean {\n  return isObject(p) && p !== null;\n}\n\nexport function isNonArrayObject(p: any): boolean {\n  return isObject(p) && !Array.isArray(p);\n}\n\nexport function isString(p: any): boolean {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isInteger(p: any): boolean {\n  return isNumber(p) && Number.isInteger(p);\n}\n\nexport function isNumber(p: any): boolean {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nexport function isNativeBlob(p: any): boolean {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport * as object from './object';\nimport * as promiseimpl from './promise_external';\nimport * as type from './type';\nimport * as XhrIoExports from './xhrio';\nimport { Headers, XhrIo } from './xhrio';\n\n/**\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\n * doesn't work in React Native on Android.\n */\nexport class NetworkXhrIo implements XhrIo {\n  private xhr_: XMLHttpRequest;\n  private errorCode_: XhrIoExports.ErrorCode;\n  private sendPromise_: Promise<XhrIo>;\n  private sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = XhrIoExports.ErrorCode.NO_ERROR;\n    this.sendPromise_ = promiseimpl.make((resolve, reject) => {\n      this.xhr_.addEventListener('abort', event => {\n        this.errorCode_ = XhrIoExports.ErrorCode.ABORT;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('error', event => {\n        this.errorCode_ = XhrIoExports.ErrorCode.NETWORK_ERROR;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('load', event => {\n        resolve(this);\n      });\n    });\n  }\n\n  /**\n   * @override\n   */\n  send(\n    url: string,\n    method: string,\n    opt_body?: ArrayBufferView | Blob | string | null,\n    opt_headers?: Headers\n  ): Promise<XhrIo> {\n    if (this.sent_) {\n      throw errorsExports.internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (type.isDef(opt_headers)) {\n      const headers = opt_headers as Headers;\n      object.forEach(headers, (key, val) => {\n        this.xhr_.setRequestHeader(key, val.toString());\n      });\n    }\n    if (type.isDef(opt_body)) {\n      this.xhr_.send(opt_body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  /**\n   * @override\n   */\n  getErrorCode(): XhrIoExports.ErrorCode {\n    if (!this.sent_) {\n      throw errorsExports.internalError(\n        'cannot .getErrorCode() before sending'\n      );\n    }\n    return this.errorCode_;\n  }\n\n  /**\n   * @override\n   */\n  getStatus(): number {\n    if (!this.sent_) {\n      throw errorsExports.internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getResponseText(): string {\n    if (!this.sent_) {\n      throw errorsExports.internalError(\n        'cannot .getResponseText() before sending'\n      );\n    }\n    return this.xhr_.responseText;\n  }\n\n  /**\n   * Aborts the request.\n   * @override\n   */\n  abort() {\n    this.xhr_.abort();\n  }\n\n  /**\n   * @override\n   */\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  /**\n   * @override\n   */\n  addUploadProgressListener(listener: (p1: Event) => void) {\n    if (type.isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  /**\n   * @override\n   */\n  removeUploadProgressListener(listener: (p1: Event) => void) {\n    if (type.isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Replacement for goog.net.XhrIoPool that works with fbs.XhrIo.\n */\nimport { XhrIo } from './xhrio';\nimport { NetworkXhrIo } from './xhrio_network';\n\n/**\n * Factory-like class for creating XhrIo instances.\n */\nexport class XhrIoPool {\n  createXhrIo(): XhrIo {\n    return new NetworkXhrIo();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(s: string): { [name: string]: any } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (type.isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\nimport * as errorsExports from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * @struct\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    let encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    let encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw errorsExports.invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string): Location {\n    let location: Location | null = null;\n    let bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    let gsPath = '(/(.*))?$';\n    let path = '(/([^?#]*).*)?$';\n    let gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    let gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    let version = 'v[A-Za-z0-9_]+';\n    let hostRegex = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    let httpRegex = new RegExp(\n      `^https?://${hostRegex}/${version}/b/${bucketDomain}/o${path}`,\n      'i'\n    );\n    let httpIndices = { bucket: 1, path: 3 };\n    let groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      { regex: httpRegex, indices: httpIndices, postModify: httpModify }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      let group = groups[i];\n      let captures = group.regex.exec(url);\n      if (captures) {\n        let bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw errorsExports.invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length == 0) {\n    return null;\n  }\n  let index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  let newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  let canonicalChildPath = childPath\n    .split('/')\n    .filter(function(component) {\n      return component.length > 0;\n    })\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  let index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport * as object from './object';\nimport { DEFAULT_HOST } from './constants';\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(urlPart: string): string {\n  return `https://${DEFAULT_HOST}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  let encode = encodeURIComponent;\n  let queryPart = '?';\n  object.forEach(params, function(key, val) {\n    let nextPart = encode(key) + '=' + encode(val.toString());\n    queryPart = queryPart + nextPart + '&';\n  });\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport { AuthWrapper } from './authwrapper';\nimport * as json from './json';\nimport { Location } from './location';\nimport * as path from './path';\nimport * as type from './type';\nimport * as UrlUtils from './url';\n\nexport function noXform_(metadata: Metadata, value: any): any {\n  return value;\n}\n\n/**\n * @struct\n */\nexport class Mapping {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2: any) => any;\n\n  constructor(\n    public server: string,\n    opt_local?: string | null,\n    opt_writable?: boolean,\n    opt_xform?: (p1: Metadata, p2: any) => any | null\n  ) {\n    this.local = opt_local || server;\n    this.writable = !!opt_writable;\n    this.xform = opt_xform || noXform_;\n  }\n}\ntype Mappings = Mapping[];\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: any): string {\n  let valid = type.isString(fullPath);\n  if (!valid || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    fullPath = fullPath as string;\n    return path.lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mapping[] = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(metadata: Metadata, fullPath: any): string {\n    return xformPath(fullPath);\n  }\n  let nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(metadata: Metadata, size: any): number | null | undefined {\n    if (type.isDef(size)) {\n      return +(size as number);\n    } else {\n      return size;\n    }\n  }\n  let sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, authWrapper: AuthWrapper) {\n  function generateRef() {\n    let bucket: string = metadata['bucket'] as string;\n    let path: string = metadata['fullPath'] as string;\n    let loc = new Location(bucket, path);\n    return authWrapper.makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  authWrapper: AuthWrapper,\n  resource: { [name: string]: any },\n  mappings: Mappings\n): Metadata {\n  let metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  let len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    let mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n  addRef(metadata, authWrapper);\n  return metadata;\n}\n\nexport function fromResourceString(\n  authWrapper: AuthWrapper,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  let obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  let resource = obj as Metadata;\n  return fromResource(authWrapper, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string\n): string | null {\n  let obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!type.isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  let tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  let encode = encodeURIComponent;\n  let tokensList = tokens.split(',');\n  let urls = tokensList.map(function(token: string): string {\n    let bucket: string = metadata['bucket'] as string;\n    let path: string = metadata['fullPath'] as string;\n    let urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    let base = UrlUtils.makeUrl(urlPart);\n    let queryString = UrlUtils.makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Metadata,\n  mappings: Mappings\n): string {\n  let resource: {\n    [prop: string]: any;\n  } = {};\n  let len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    let mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n\nexport function metadataValidator(p: any) {\n  let validType = p && type.isObject(p);\n  if (!validType) {\n    throw 'Expected Metadata object.';\n  }\n  for (let key in p) {\n    let val = p[key];\n    if (key === 'customMetadata') {\n      if (!type.isObject(val)) {\n        throw 'Expected object for \\'customMetadata\\' mapping.';\n      }\n    } else {\n      if (type.isNonNullObject(val)) {\n        throw \"Mapping for '\" + key + \"' cannot be an object.\";\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the listOptions and listResult format\n */\nimport { AuthWrapper } from './authwrapper';\nimport { Location } from './location';\nimport * as json from './json';\nimport * as type from './type';\nimport { ListResult } from '../list';\nimport * as errors from './error';\n\n/**\n * Represents the simplified object metadata returned by List API.\n * Other fields are filtered because list in Firebase Rules does not grant\n * the permission to read the metadata.\n */\ninterface ListMetadataResponse {\n  name: string;\n  bucket: string;\n}\n\n/**\n * Represents the JSON response of List API.\n */\ninterface ListResultResponse {\n  prefixes: string[];\n  items: ListMetadataResponse[];\n  nextPageToken?: string;\n}\n\nconst MAX_RESULTS_KEY = 'maxResults';\nconst MAX_MAX_RESULTS = 1000;\nconst PAGE_TOKEN_KEY = 'pageToken';\nconst PREFIXES_KEY = 'prefixes';\nconst ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(\n  authWrapper: AuthWrapper,\n  resource: ListResultResponse\n): ListResult {\n  const listResult: ListResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  const bucket = authWrapper.bucket();\n  if (bucket === null) {\n    throw errors.noDefaultBucket();\n  }\n  if (resource[PREFIXES_KEY]) {\n    for (const path of resource[PREFIXES_KEY]) {\n      const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      const reference = authWrapper.makeStorageReference(\n        new Location(bucket, pathWithoutTrailingSlash)\n      );\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (const item of resource[ITEMS_KEY]) {\n      const reference = authWrapper.makeStorageReference(\n        new Location(bucket, item['name'])\n      );\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\n\nexport function fromResponseString(\n  authWrapper: AuthWrapper,\n  resourceString: string\n): ListResult | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as ListResultResponse;\n  return fromBackendResponse(authWrapper, resource);\n}\n\nexport function listOptionsValidator(p: any) {\n  const validType = p && type.isObject(p);\n  if (!validType) {\n    throw 'Expected ListOptions object.';\n  }\n  for (const key in p) {\n    if (key === MAX_RESULTS_KEY) {\n      if (!type.isInteger(p[MAX_RESULTS_KEY]) || p[MAX_RESULTS_KEY] <= 0) {\n        throw 'Expected maxResults to be a positive number.';\n      }\n      if (p[MAX_RESULTS_KEY] > 1000) {\n        throw `Expected maxResults to be less than or equal to ${MAX_MAX_RESULTS}.`;\n      }\n    } else if (key === PAGE_TOKEN_KEY) {\n      if (p[PAGE_TOKEN_KEY] && !type.isString(p[PAGE_TOKEN_KEY])) {\n        throw 'Expected pageToken to be string.';\n      }\n    } else {\n      throw 'Unknown option: ' + key;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport * as MetadataUtils from './metadata';\nimport * as ListOptionsUtils from './list';\nimport * as type from './type';\n\n/**\n * @param name Name of the function.\n * @param specs Argument specs.\n * @param passed The actual arguments passed to the function.\n * @throws {fbs.Error} If the arguments are invalid.\n */\nexport function validate(name: string, specs: ArgSpec[], passed: IArguments) {\n  let minArgs = specs.length;\n  let maxArgs = specs.length;\n  for (let i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n  let validLength = minArgs <= passed.length && passed.length <= maxArgs;\n  if (!validLength) {\n    throw errorsExports.invalidArgumentCount(\n      minArgs,\n      maxArgs,\n      name,\n      passed.length\n    );\n  }\n  for (let i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw errorsExports.invalidArgument(i, name, e.message);\n      } else {\n        throw errorsExports.invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n\n/**\n * @struct\n */\nexport class ArgSpec {\n  validator: (p1: any) => void;\n  optional: boolean;\n\n  constructor(validator: (p1: any) => void, opt_optional?: boolean) {\n    let self = this;\n    this.validator = function(p: any) {\n      if (self.optional && !type.isJustDef(p)) {\n        return;\n      }\n      validator(p);\n    };\n    this.optional = !!opt_optional;\n  }\n}\n\nexport function and_(v1: (p1: any) => void, v2: Function): (p1: any) => void {\n  return function(p) {\n    v1(p);\n    v2(p);\n  };\n}\n\nexport function stringSpec(\n  opt_validator?: (p1: any) => void | null,\n  opt_optional?: boolean\n): ArgSpec {\n  function stringValidator(p: any) {\n    if (!type.isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n  let validator;\n  if (opt_validator) {\n    validator = and_(stringValidator, opt_validator);\n  } else {\n    validator = stringValidator;\n  }\n  return new ArgSpec(validator, opt_optional);\n}\n\nexport function uploadDataSpec(): ArgSpec {\n  function validator(p: any) {\n    let valid =\n      p instanceof Uint8Array ||\n      p instanceof ArrayBuffer ||\n      (type.isNativeBlobDefined() && p instanceof Blob);\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n  return new ArgSpec(validator);\n}\n\nexport function metadataSpec(opt_optional?: boolean): ArgSpec {\n  return new ArgSpec(MetadataUtils.metadataValidator, opt_optional);\n}\n\nexport function listOptionSpec(opt_optional?: boolean): ArgSpec {\n  return new ArgSpec(ListOptionsUtils.listOptionsValidator, opt_optional);\n}\n\nexport function nonNegativeNumberSpec(): ArgSpec {\n  function validator(p: any) {\n    let valid = type.isNumber(p) && p >= 0;\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n  return new ArgSpec(validator);\n}\n\nexport function looseObjectSpec(\n  opt_validator?: ((p1: any) => void) | null,\n  opt_optional?: boolean\n): ArgSpec {\n  function validator(p: any) {\n    let isLooseObject = p === null || (type.isDef(p) && p instanceof Object);\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n    if (opt_validator !== undefined && opt_validator !== null) {\n      opt_validator(p);\n    }\n  }\n  return new ArgSpec(validator, opt_optional);\n}\n\nexport function nullFunctionSpec(opt_optional?: boolean): ArgSpec {\n  function validator(p: any) {\n    let valid = p === null || type.isFunction(p);\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n  return new ArgSpec(validator, opt_optional);\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport * as type from './type';\n\nfunction getBlobBuilder(): (typeof IBlobBuilder) | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param var_args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...var_args: (string | Blob | ArrayBuffer)[]): Blob {\n  let BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    let bb = new BlobBuilder();\n    for (let i = 0; i < var_args.length; i++) {\n      bb.append(var_args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (type.isNativeBlobDefined()) {\n      return new Blob(var_args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if ((blob as any).webkitSlice) {\n    return (blob as any).webkitSlice(start, end);\n  } else if ((blob as any).mozSlice) {\n    return (blob as any).mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport * as fs from './fs';\nimport * as string from './string';\nimport { StringFormat } from './string';\nimport * as type from './type';\n\n/**\n * @param opt_elideCopy If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n */\nexport class FbsBlob {\n  private data_: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, opt_elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (type.isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (opt_elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (opt_elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (type.isNativeBlob(this.data_)) {\n      let realBlob = this.data_ as Blob;\n      let sliced = fs.sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      let slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...var_args: (string | FbsBlob)[]): FbsBlob | null {\n    if (type.isNativeBlobDefined()) {\n      var blobby: (Blob | Uint8Array | string)[] = var_args.map(function(\n        val: string | FbsBlob\n      ): Blob | Uint8Array | string {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(fs.getBlob.apply(null, blobby));\n    } else {\n      let uint8Arrays: Uint8Array[] = var_args.map(function(\n        val: string | FbsBlob\n      ): Uint8Array {\n        if (type.isString(val)) {\n          return string.dataFromString(StringFormat.RAW, val as string).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return (val as FbsBlob).data_ as Uint8Array;\n        }\n      });\n      let finalLength = 0;\n      uint8Arrays.forEach(function(array: Uint8Array): void {\n        finalLength += array.byteLength;\n      });\n      let merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach(function(array: Uint8Array) {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns true if the object is contained in the array (compared with ===).\n * @template T\n */\nexport function contains<T>(array: T[], elem: T): boolean {\n  return array.indexOf(elem) !== -1;\n}\n\n/**\n * Returns a shallow copy of the array or array-like object (e.g. arguments).\n * @template T\n */\nexport function clone<T>(arraylike: T[]): T[] {\n  return Array.prototype.slice.call(arraylike);\n}\n\n/**\n * Removes the given element from the given array, if it is contained.\n * Directly modifies the passed-in array.\n * @template T\n */\nexport function remove<T>(array: T[], elem: T) {\n  const i = array.indexOf(elem);\n  if (i !== -1) {\n    array.splice(i, 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Headers, XhrIo } from './xhrio';\n\nexport type UrlParams = { [name: string]: string | number };\n\nexport class RequestInfo<T> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n\n  errorHandler:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: (p1: XhrIo, p2: string) => T,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\n\nimport * as array from './array';\nimport { AuthWrapper } from './authwrapper';\nimport { FbsBlob } from './blob';\nimport * as errorsExports from './error';\nimport { FirebaseStorageError } from './error';\nimport { Location } from './location';\nimport * as MetadataUtils from './metadata';\nimport * as ListResultUtils from './list';\nimport * as object from './object';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { XhrIo } from './xhrio';\n\n/**\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean) {\n  if (!cndn) {\n    throw errorsExports.unknown();\n  }\n}\n\nexport function metadataHandler(\n  authWrapper: AuthWrapper,\n  mappings: MetadataUtils.Mappings\n): (p1: XhrIo, p2: string) => Metadata {\n  function handler(xhr: XhrIo, text: string): Metadata {\n    let metadata = MetadataUtils.fromResourceString(\n      authWrapper,\n      text,\n      mappings\n    );\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  authWrapper: AuthWrapper\n): (p1: XhrIo, p2: string) => ListResult {\n  function handler(xhr: XhrIo, text: string): ListResult {\n    const listResult = ListResultUtils.fromResponseString(authWrapper, text);\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  authWrapper: AuthWrapper,\n  mappings: MetadataUtils.Mappings\n): (p1: XhrIo, p2: string) => string | null {\n  function handler(xhr: XhrIo, text: string): string | null {\n    let metadata = MetadataUtils.fromResourceString(\n      authWrapper,\n      text,\n      mappings\n    );\n    handlerCheck(metadata !== null);\n    return MetadataUtils.downloadUrlFromResourceString(\n      metadata as Metadata,\n      text\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr;\n    if (xhr.getStatus() === 401) {\n      newErr = errorsExports.unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = errorsExports.quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = errorsExports.unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  let shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = errorsExports.objectNotFound(location.path);\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  authWrapper: AuthWrapper,\n  location: Location,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<Metadata> {\n  let urlPart = location.fullServerUrl();\n  let url = UrlUtils.makeUrl(urlPart);\n  let method = 'GET';\n  let timeout = authWrapper.maxOperationRetryTime();\n  let requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(authWrapper, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  authWrapper: AuthWrapper,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<ListResult> {\n  let urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = authWrapper.maxOperationRetryTime();\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(authWrapper),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  authWrapper: AuthWrapper,\n  location: Location,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<string | null> {\n  let urlPart = location.fullServerUrl();\n  let url = UrlUtils.makeUrl(urlPart);\n  let method = 'GET';\n  let timeout = authWrapper.maxOperationRetryTime();\n  let requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(authWrapper, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  authWrapper: AuthWrapper,\n  location: Location,\n  metadata: Metadata,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<Metadata> {\n  let urlPart = location.fullServerUrl();\n  let url = UrlUtils.makeUrl(urlPart);\n  let method = 'PATCH';\n  let body = MetadataUtils.toResourceString(metadata, mappings);\n  let headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  let timeout = authWrapper.maxOperationRetryTime();\n  let requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(authWrapper, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  authWrapper: AuthWrapper,\n  location: Location\n): RequestInfo<void> {\n  let urlPart = location.fullServerUrl();\n  let url = UrlUtils.makeUrl(urlPart);\n  let method = 'DELETE';\n  let timeout = authWrapper.maxOperationRetryTime();\n\n  function handler(xhr: XhrIo, text: string) {}\n  let requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  opt_metadata?: Metadata | null\n): Metadata {\n  let metadata = object.clone<Metadata>(opt_metadata);\n  metadata['fullPath'] = location.path;\n  metadata['size'] = blob.size();\n  if (!metadata['contentType']) {\n    metadata['contentType'] = determineContentType_(null, blob);\n  }\n  return metadata;\n}\n\nexport function multipartUpload(\n  authWrapper: AuthWrapper,\n  location: Location,\n  mappings: MetadataUtils.Mappings,\n  blob: FbsBlob,\n  opt_metadata?: Metadata | null\n): RequestInfo<Metadata> {\n  let urlPart = location.bucketOnlyServerUrl();\n  let headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str =\n        str +\n        Math.random()\n          .toString()\n          .slice(2);\n    }\n    return str;\n  }\n  let boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  let metadata = metadataForUpload_(location, blob, opt_metadata);\n  let metadataString = MetadataUtils.toResourceString(metadata, mappings);\n  let preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata['contentType'] +\n    '\\r\\n\\r\\n';\n  let postBlobPart = '\\r\\n--' + boundary + '--';\n  let body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw errorsExports.cannotSliceBlob();\n  }\n  let urlParams: UrlParams = { name: metadata['fullPath']! };\n  let url = UrlUtils.makeUrl(urlPart);\n  let method = 'POST';\n  let timeout = authWrapper.maxUploadRetryTime();\n  let requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(authWrapper, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n * @struct\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(xhr: XhrIo, opt_allowed?: string[]): string {\n  let status;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  let allowed = opt_allowed || ['active'];\n  handlerCheck(array.contains(allowed, status));\n  return status as string;\n}\n\nexport function createResumableUpload(\n  authWrapper: AuthWrapper,\n  location: Location,\n  mappings: MetadataUtils.Mappings,\n  blob: FbsBlob,\n  opt_metadata?: Metadata | null\n): RequestInfo<string> {\n  let urlPart = location.bucketOnlyServerUrl();\n  let metadata = metadataForUpload_(location, blob, opt_metadata);\n  let urlParams: UrlParams = { name: metadata['fullPath']! };\n  let url = UrlUtils.makeUrl(urlPart);\n  let method = 'POST';\n  let headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadata['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  let body = MetadataUtils.toResourceString(metadata, mappings);\n  let timeout = authWrapper.maxUploadRetryTime();\n\n  function handler(xhr: XhrIo, text: string): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(type.isString(url));\n    return url as string;\n  }\n  let requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  authWrapper: AuthWrapper,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<ResumableUploadStatus> {\n  let headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: XhrIo, text: string): ResumableUploadStatus {\n    let status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    let size = parseInt(sizeString as string, 10);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  let method = 'POST';\n  let timeout = authWrapper.maxUploadRetryTime();\n  let requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const resumableUploadChunkSize: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param opt_status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  authWrapper: AuthWrapper,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: MetadataUtils.Mappings,\n  opt_status?: ResumableUploadStatus | null,\n  opt_progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  let status = new ResumableUploadStatus(0, 0);\n  if (opt_status) {\n    status.current = opt_status.current;\n    status.total = opt_status.total;\n  } else {\n    status.current = 0;\n    status.total = blob.size();\n  }\n  if (blob.size() !== status.total) {\n    throw errorsExports.serverFileWrongSize();\n  }\n  let bytesLeft = status.total - status.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  let startByte = status.current;\n  let endByte = startByte + bytesToUpload;\n  let uploadCommand =\n    bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  let headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status.current\n  };\n  let body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw errorsExports.cannotSliceBlob();\n  }\n\n  function handler(xhr: XhrIo, text: string): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    let uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    let newCurrent = status.current + bytesToUpload;\n    let size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(authWrapper, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  let method = 'POST';\n  let timeout = authWrapper.maxUploadRetryTime();\n  let requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = opt_progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\nimport { FirebaseStorageError } from './error';\n\ntype NextFn<T> = (value: T) => void;\ntype ErrorFn = (error: Error | FirebaseStorageError) => void;\ntype CompleteFn = () => void;\ntype Unsubscribe = () => void;\n\ntype Subscribe<T> = (\n  next?: NextFn<T> | { [name: string]: string | null } | null,\n  error?: ErrorFn | null,\n  complete?: CompleteFn | null\n) => Unsubscribe;\n\nexport { NextFn, ErrorFn, CompleteFn, Unsubscribe, Subscribe };\n\n/**\n * @struct\n */\nexport class Observer<T> {\n  next?: NextFn<T> | null;\n  error?: ErrorFn | null;\n  complete?: CompleteFn | null;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | { [name: string]: string | null } | null,\n    opt_error?: ErrorFn | null,\n    opt_complete?: CompleteFn | null\n  ) {\n    let asFunctions =\n      type.isFunction(nextOrObserver) ||\n      type.isDef(opt_error) ||\n      type.isDef(opt_complete);\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T> | null;\n      this.error = opt_error || null;\n      this.complete = opt_complete || null;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T> | null;\n        error?: ErrorFn | null;\n        complete?: CompleteFn | null;\n      };\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TaskState } from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport { Reference } from './reference';\nimport { UploadTask } from './task';\n\nexport class UploadTaskSnapshot {\n  constructor(\n    readonly bytesTransferred: number,\n    readonly totalBytes: number,\n    readonly state: TaskState,\n    readonly metadata: Metadata | null,\n    readonly task: UploadTask,\n    readonly ref: Reference\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Method for invoking a callback asynchronously.\n */\nimport * as promiseimpl from './promise_external';\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\nexport function async(f: Function): Function {\n  return function(...argsToForward: any[]) {\n    promiseimpl.resolve(true).then(function() {\n      f.apply(null, argsToForward);\n    });\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { AuthWrapper } from './implementation/authwrapper';\nimport { FbsBlob } from './implementation/blob';\nimport * as errors from './implementation/error';\nimport { FirebaseStorageError } from './implementation/error';\nimport * as fbsTaskEnums from './implementation/taskenums';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  CompleteFn,\n  ErrorFn,\n  NextFn,\n  Observer,\n  Subscribe,\n  Unsubscribe\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot } from './tasksnapshot';\nimport * as fbsArgs from './implementation/args';\nimport { ArgSpec } from './implementation/args';\nimport * as fbsArray from './implementation/array';\nimport { async as fbsAsync } from './implementation/async';\nimport { Location } from './implementation/location';\nimport * as fbsMetadata from './implementation/metadata';\nimport * as fbsPromiseimpl from './implementation/promise_external';\nimport * as fbsRequests from './implementation/requests';\nimport * as typeUtils from './implementation/type';\nimport { Reference } from './reference';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n */\nexport class UploadTask {\n  private ref_: Reference;\n  private authWrapper_: AuthWrapper;\n  private location_: Location;\n  private blob_: FbsBlob;\n  private metadata_: Metadata | null;\n  private mappings_: fbsMetadata.Mappings;\n  private transferred_: number = 0;\n  private needToFetchStatus_: boolean = false;\n  private needToFetchMetadata_: boolean = false;\n  private observers_: Observer<UploadTaskSnapshot>[] = [];\n  private resumable_: boolean;\n  private state_: InternalTaskState;\n  private error_: Error | null = null;\n  private uploadUrl_: string | null = null;\n  private request_: Request<any> | null = null;\n  private chunkMultiplier_: number = 1;\n  private errorHandler_: (p1: FirebaseStorageError) => void;\n  private metadataErrorHandler_: (p1: FirebaseStorageError) => void;\n  private resolve_: ((p1: UploadTaskSnapshot) => void) | null = null;\n  private reject_: ((p1: Error) => void) | null = null;\n  private promise_: Promise<UploadTaskSnapshot>;\n\n  /**\n   * @param ref The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob The blob to upload.\n   */\n  constructor(\n    ref: Reference,\n    authWrapper: AuthWrapper,\n    location: Location,\n    mappings: fbsMetadata.Mappings,\n    blob: FbsBlob,\n    metadata: Metadata | null = null\n  ) {\n    this.ref_ = ref;\n    this.authWrapper_ = authWrapper;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n    this.errorHandler_ = error => {\n      this.request_ = null;\n      this.chunkMultiplier_ = 1;\n      if (error.codeEquals(errors.Code.CANCELED)) {\n        this.needToFetchStatus_ = true;\n        this.completeTransitions_();\n      } else {\n        this.error_ = error;\n        this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.metadataErrorHandler_ = error => {\n      this.request_ = null;\n      if (error.codeEquals(errors.Code.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this.error_ = error;\n        this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.promise_ = fbsPromiseimpl.make((resolve, reject) => {\n      this.resolve_ = resolve;\n      this.reject_ = reject;\n      this.start_();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this.promise_.then(null, () => {});\n  }\n\n  private makeProgressCallback_(): (p1: number, p2: number) => void {\n    const sizeBefore = this.transferred_;\n    return (loaded, total) => {\n      this.updateProgress_(sizeBefore + loaded);\n    };\n  }\n\n  private shouldDoResumable_(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private start_() {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this.request_ !== null) {\n      return;\n    }\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  }\n\n  private resolveToken_(callback: (p1: string | null) => void) {\n    this.authWrapper_.getAuthToken().then(authToken => {\n      switch (this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this.transition_(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this.transition_(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private createResumable_() {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.createResumableUpload(\n        this.authWrapper_,\n        this.location_,\n        this.mappings_,\n        this.blob_,\n        this.metadata_\n      );\n      const createRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this.request_ = null;\n        this.uploadUrl_ = url;\n        this.needToFetchStatus_ = false;\n        this.completeTransitions_();\n      }, this.errorHandler_);\n    });\n  }\n\n  private fetchStatus_() {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this.uploadUrl_ as string;\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.getResumableUploadStatus(\n        this.authWrapper_,\n        this.location_,\n        url,\n        this.blob_\n      );\n      const statusRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as fbsRequests.ResumableUploadStatus;\n        this.request_ = null;\n        this.updateProgress_(status.current);\n        this.needToFetchStatus_ = false;\n        if (status.finalized) {\n          this.needToFetchMetadata_ = true;\n        }\n        this.completeTransitions_();\n      }, this.errorHandler_);\n    });\n  }\n\n  private continueUpload_() {\n    const chunkSize =\n      fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;\n    const status = new fbsRequests.ResumableUploadStatus(\n      this.transferred_,\n      this.blob_.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this.uploadUrl_ as string;\n    this.resolveToken_(authToken => {\n      let requestInfo;\n      try {\n        requestInfo = fbsRequests.continueResumableUpload(\n          this.location_,\n          this.authWrapper_,\n          url,\n          this.blob_,\n          chunkSize,\n          this.mappings_,\n          status,\n          this.makeProgressCallback_()\n        );\n      } catch (e) {\n        this.error_ = e;\n        this.transition_(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = uploadRequest;\n      uploadRequest\n        .getPromise()\n        .then((newStatus: fbsRequests.ResumableUploadStatus) => {\n          this.increaseMultiplier_();\n          this.request_ = null;\n          this.updateProgress_(newStatus.current);\n          if (newStatus.finalized) {\n            this.metadata_ = newStatus.metadata;\n            this.transition_(InternalTaskState.SUCCESS);\n          } else {\n            this.completeTransitions_();\n          }\n        }, this.errorHandler_);\n    });\n  }\n\n  private increaseMultiplier_() {\n    const currentSize =\n      fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;\n\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  }\n\n  private fetchMetadata_() {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.getMetadata(\n        this.authWrapper_,\n        this.location_,\n        this.mappings_\n      );\n      const metadataRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this.request_ = null;\n        this.metadata_ = metadata;\n        this.transition_(InternalTaskState.SUCCESS);\n      }, this.metadataErrorHandler_);\n    });\n  }\n\n  private oneShotUpload_() {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.multipartUpload(\n        this.authWrapper_,\n        this.location_,\n        this.mappings_,\n        this.blob_,\n        this.metadata_\n      );\n      const multipartRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this.request_ = null;\n        this.metadata_ = metadata;\n        this.updateProgress_(this.blob_.size());\n        this.transition_(InternalTaskState.SUCCESS);\n      }, this.errorHandler_);\n    });\n  }\n\n  private updateProgress_(transferred: number) {\n    const old = this.transferred_;\n    this.transferred_ = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  }\n\n  private transition_(state: InternalTaskState) {\n    if (this.state_ === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = errors.canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n    }\n  }\n\n  private completeTransitions_() {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = fbsTaskEnums.taskStateFromInternalTaskState(\n      this.state_\n    );\n    return new UploadTaskSnapshot(\n      this.transferred_,\n      this.blob_.size(),\n      externalState,\n      this.metadata_,\n      this,\n      this.ref_\n    );\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type The type of event to listen for.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | NextFn<UploadTaskSnapshot>\n      | { [name: string]: any }\n      | null,\n    error?: ErrorFn | null,\n    completed?: CompleteFn | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    function typeValidator(_p: any) {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw `Expected one of the event types: [${TaskEvent.STATE_CHANGED}].`;\n      }\n    }\n    const nextOrObserverMessage =\n      'Expected a function or an Object with one of ' +\n      '`next`, `error`, `complete` properties.';\n    const nextValidator = fbsArgs.nullFunctionSpec(true).validator;\n    const observerValidator = fbsArgs.looseObjectSpec(null, true).validator;\n\n    function nextOrObserverValidator(p: any) {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n      try {\n        observerValidator(p);\n        const anyDefined =\n          typeUtils.isJustDef(p['next']) ||\n          typeUtils.isJustDef(p['error']) ||\n          typeUtils.isJustDef(p['complete']);\n        if (!anyDefined) {\n          throw '';\n        }\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n    const specs = [\n      fbsArgs.stringSpec(typeValidator),\n      fbsArgs.looseObjectSpec(nextOrObserverValidator, true),\n      fbsArgs.nullFunctionSpec(true),\n      fbsArgs.nullFunctionSpec(true)\n    ];\n    fbsArgs.validate('on', specs, arguments);\n    const self = this;\n\n    function makeBinder(\n      specs: ArgSpec[] | null\n    ): Subscribe<UploadTaskSnapshot> {\n      function binder(\n        nextOrObserver:\n          | NextFn<UploadTaskSnapshot>\n          | { [name: string]: string | null }\n          | null,\n        error?: ErrorFn | null,\n        opt_complete?: CompleteFn | null\n      ) {\n        if (specs !== null) {\n          fbsArgs.validate('on', specs, arguments);\n        }\n        const observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return () => {\n          self.removeObserver_(observer);\n        };\n      }\n      return binder;\n    }\n\n    function binderNextOrObserverValidator(p: any) {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n      nextOrObserverValidator(p);\n    }\n    const binderSpecs = [\n      fbsArgs.looseObjectSpec(binderNextOrObserverValidator),\n      fbsArgs.nullFunctionSpec(true),\n      fbsArgs.nullFunctionSpec(true)\n    ];\n    const typeOnly = !(\n      typeUtils.isJustDef(nextOrObserver) ||\n      typeUtils.isJustDef(error) ||\n      typeUtils.isJustDef(completed)\n    );\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: any) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: any) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: Error) => T | Promise<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private addObserver_(observer: Observer<UploadTaskSnapshot>) {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private removeObserver_(observer: Observer<UploadTaskSnapshot>) {\n    fbsArray.remove(this.observers_, observer);\n  }\n\n  private notifyObservers_() {\n    this.finishPromise_();\n    const observers = fbsArray.clone(this.observers_);\n    observers.forEach(observer => {\n      this.notifyObserver_(observer);\n    });\n  }\n\n  private finishPromise_() {\n    if (this.resolve_ !== null) {\n      let triggered = true;\n      switch (fbsTaskEnums.taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this.resolve_.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this.reject_ as ((p1: Error) => void);\n          fbsAsync(toCall.bind(null, this.error_ as Error))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  }\n\n  private notifyObserver_(observer: Observer<UploadTaskSnapshot>) {\n    const externalState = fbsTaskEnums.taskStateFromInternalTaskState(\n      this.state_\n    );\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(observer.error.bind(observer, this.error_ as Error))();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(observer.error.bind(observer, this.error_ as Error))();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    fbsArgs.validate('resume', [], arguments);\n    const valid =\n      this.state_ === InternalTaskState.PAUSED ||\n      this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    fbsArgs.validate('pause', [], arguments);\n    const valid = this.state_ === InternalTaskState.RUNNING;\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    fbsArgs.validate('cancel', [], arguments);\n    const valid =\n      this.state_ === InternalTaskState.RUNNING ||\n      this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase Storage Reference class.\n */\nimport * as args from './implementation/args';\nimport { AuthWrapper } from './implementation/authwrapper';\nimport { FbsBlob } from './implementation/blob';\nimport * as errorsExports from './implementation/error';\nimport { Location } from './implementation/location';\nimport * as metadata from './implementation/metadata';\nimport * as object from './implementation/object';\nimport * as path from './implementation/path';\nimport * as requests from './implementation/requests';\nimport * as fbsString from './implementation/string';\nimport { StringFormat } from './implementation/string';\nimport * as type from './implementation/type';\nimport { Metadata } from './metadata';\nimport { Service } from './service';\nimport { UploadTask } from './task';\nimport { ListOptions, ListResult } from './list';\nimport { listOptionSpec } from './implementation/args';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @param location An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  protected location: Location;\n\n  constructor(protected authWrapper: AuthWrapper, location: string | Location) {\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n\n  /**\n   * @return The URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    args.validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  }\n\n  protected newRef(authWrapper: AuthWrapper, location: Location): Reference {\n    return new Reference(authWrapper, location);\n  }\n\n  protected mappings(): metadata.Mappings {\n    return metadata.getMappings();\n  }\n\n  /**\n   * @return A reference to the object obtained by\n   *     appending childPath, removing any duplicate, beginning, or trailing\n   *     slashes.\n   */\n  child(childPath: string): Reference {\n    args.validate('child', [args.stringSpec()], arguments);\n    let newPath = path.child(this.location.path, childPath);\n    let location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.authWrapper, location);\n  }\n\n  /**\n   * @return A reference to the parent of the\n   *     current object, or null if the current object is the root.\n   */\n  get parent(): Reference | null {\n    let newPath = path.parent(this.location.path);\n    if (newPath === null) {\n      return null;\n    }\n    let location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.authWrapper, location);\n  }\n\n  /**\n   * @return An reference to the root of this\n   *     object's bucket.\n   */\n  get root(): Reference {\n    let location = new Location(this.location.bucket, '');\n    return this.newRef(this.authWrapper, location);\n  }\n\n  get bucket(): string {\n    return this.location.bucket;\n  }\n\n  get fullPath(): string {\n    return this.location.path;\n  }\n\n  get name(): string {\n    return path.lastComponent(this.location.path);\n  }\n\n  get storage(): Service {\n    return this.authWrapper.service();\n  }\n\n  /**\n   * Uploads a blob to this object's location.\n   * @param data The blob to upload.\n   * @return An UploadTask that lets you control and\n   *     observe the upload.\n   */\n  put(\n    data: Blob | Uint8Array | ArrayBuffer,\n    metadata: Metadata | null = null\n  ): UploadTask {\n    args.validate(\n      'put',\n      [args.uploadDataSpec(), args.metadataSpec(true)],\n      arguments\n    );\n    this.throwIfRoot_('put');\n    return new UploadTask(\n      this,\n      this.authWrapper,\n      this.location,\n      this.mappings(),\n      new FbsBlob(data),\n      metadata\n    );\n  }\n\n  /**\n   * Uploads a string to this object's location.\n   * @param string The string to upload.\n   * @param opt_format The format of the string to upload.\n   * @return An UploadTask that lets you control and\n   *     observe the upload.\n   */\n  putString(\n    string: string,\n    format: StringFormat = StringFormat.RAW,\n    opt_metadata?: Metadata\n  ): UploadTask {\n    args.validate(\n      'putString',\n      [\n        args.stringSpec(),\n        args.stringSpec(fbsString.formatValidator, true),\n        args.metadataSpec(true)\n      ],\n      arguments\n    );\n    this.throwIfRoot_('putString');\n    let data = fbsString.dataFromString(format, string);\n    let metadata = object.clone<Metadata>(opt_metadata);\n    if (!type.isDef(metadata['contentType']) && type.isDef(data.contentType)) {\n      metadata['contentType'] = data.contentType!;\n    }\n    return new UploadTask(\n      this,\n      this.authWrapper,\n      this.location,\n      this.mappings(),\n      new FbsBlob(data.data, true),\n      metadata\n    );\n  }\n\n  /**\n   * Deletes the object at this location.\n   * @return A promise that resolves if the deletion succeeds.\n   */\n  delete(): Promise<void> {\n    args.validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    let self = this;\n    return this.authWrapper.getAuthToken().then(function(authToken) {\n      let requestInfo = requests.deleteObject(self.authWrapper, self.location);\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * List all items (files) and prefixes (folders) under this storage reference.\n   *\n   * This is a helper method for calling list() repeatedly until there are\n   * no more results. The default pagination size is 1000.\n   *\n   * Note: The results may not be consistent if objects are changed while this\n   * operation is running.\n   *\n   * Warning: listAll may potentially consume too many resources if there are\n   * too many results.\n   *\n   * @return A Promise that resolves with all the items and prefixes under\n   *      the current storage reference. `prefixes` contains references to\n   *      sub-directories and `items` contains references to objects in this\n   *      folder. `nextPageToken` is never returned.\n   */\n  listAll(): Promise<ListResult> {\n    args.validate('listAll', [], arguments);\n    const accumulator = {\n      prefixes: [],\n      items: []\n    };\n    return this.listAllHelper(accumulator).then(() => accumulator);\n  }\n\n  private async listAllHelper(\n    accumulator: ListResult,\n    pageToken?: string\n  ): Promise<void> {\n    let opt: ListOptions = {\n      // maxResults is 1000 by default.\n      pageToken\n    };\n    const nextPage = await this.list(opt);\n    accumulator.prefixes.push(...nextPage.prefixes);\n    accumulator.items.push(...nextPage.items);\n    if (nextPage.nextPageToken != null) {\n      await this.listAllHelper(accumulator, nextPage.nextPageToken);\n    }\n  }\n\n  /**\n   * List items (files) and prefixes (folders) under this storage reference.\n   *\n   * List API is only available for Firebase Rules Version 2.\n   *\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n   * delimited folder structure.\n   * Refer to GCS's List API if you want to learn more.\n   *\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n   * support objects whose paths end with \"/\" or contain two consecutive\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n   * list() may fail if there are too many unsupported objects in the bucket.\n   *\n   * @param options See ListOptions for details.\n   * @return A Promise that resolves with the items and prefixes.\n   *      `prefixes` contains references to sub-folders and `items`\n   *      contains references to objects in this folder. `nextPageToken`\n   *      can be used to get the rest of the results.\n   */\n  list(options?: ListOptions | null): Promise<ListResult> {\n    args.validate('list', [listOptionSpec(true)], arguments);\n    const self = this;\n    return this.authWrapper.getAuthToken().then(function(authToken) {\n      const op = options || {};\n      let requestInfo = requests.list(\n        self.authWrapper,\n        self.location,\n        /*delimiter= */ '/',\n        op.pageToken,\n        op.maxResults\n      );\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   *     A promise that resolves with the metadata for this object. If this\n   *     object doesn't exist or metadata cannot be retreived, the promise is\n   *     rejected.\n   */\n  getMetadata(): Promise<Metadata> {\n    args.validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    let self = this;\n    return this.authWrapper.getAuthToken().then(function(authToken) {\n      let requestInfo = requests.getMetadata(\n        self.authWrapper,\n        self.location,\n        self.mappings()\n      );\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * Updates the metadata for this object.\n   * @param metadata The new metadata for the object.\n   *     Only values that have been explicitly set will be changed. Explicitly\n   *     setting a value to null will remove the metadata.\n   * @return A promise that resolves\n   *     with the new metadata for this object.\n   *     @see firebaseStorage.Reference.prototype.getMetadata\n   */\n  updateMetadata(metadata: Metadata): Promise<Metadata> {\n    args.validate('updateMetadata', [args.metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    let self = this;\n    return this.authWrapper.getAuthToken().then(function(authToken) {\n      let requestInfo = requests.updateMetadata(\n        self.authWrapper,\n        self.location,\n        metadata,\n        self.mappings()\n      );\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * @return A promise that resolves with the download\n   *     URL for this object.\n   */\n  getDownloadURL(): Promise<string> {\n    args.validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    let self = this;\n    return this.authWrapper.getAuthToken().then(function(authToken) {\n      let requestInfo = requests.getDownloadUrl(\n        self.authWrapper,\n        self.location,\n        self.mappings()\n      );\n      return self.authWrapper\n        .makeRequest(requestInfo, authToken)\n        .getPromise()\n        .then(function(url) {\n          if (url === null) {\n            throw errorsExports.noDownloadURL();\n          }\n          return url;\n        });\n    });\n  }\n\n  private throwIfRoot_(name: string) {\n    if (this.location.path === '') {\n      throw errorsExports.invalidRootOperation(name);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport * as promiseimpl from './promise_external';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n * @struct\n * @template T\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: FirebaseStorageError) {\n    this.promise_ = promiseimpl.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise() {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete = false) {}\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as object from './object';\nimport * as RequestExports from './request';\nimport { Request } from './request';\nimport * as constants from './constants';\n\n/**\n * @struct\n */\nexport class RequestMap {\n  private map_: { [key: number]: Request<any> } = {};\n  private id_: number;\n\n  constructor() {\n    this.id_ = constants.MIN_SAFE_INTEGER;\n  }\n\n  /**\n   * Registers the given request with this map.\n   * The request is unregistered when it completes.\n   * @param r The request to register.\n   */\n  addRequest(r: Request<any>) {\n    let id = this.id_;\n    this.id_++;\n    this.map_[id] = r;\n    let self = this;\n\n    function unmap() {\n      delete self.map_[id];\n    }\n    r.getPromise().then(unmap, unmap);\n  }\n\n  /**\n   * Cancels all registered requests.\n   */\n  clear() {\n    object.forEach(this.map_, (key: string, val: Request<any>) => {\n      if (val) {\n        val.cancel(true);\n      }\n    });\n    this.map_ = {};\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Reference } from '../reference';\nimport { Service } from '../service';\nimport * as constants from './constants';\nimport * as errorsExports from './error';\nimport { FailRequest } from './failrequest';\nimport { Location } from './location';\nimport * as promiseimpl from './promise_external';\nimport { Request } from './request';\nimport { RequestInfo } from './requestinfo';\nimport { requestMaker } from './requestmaker';\nimport { RequestMap } from './requestmap';\nimport * as type from './type';\nimport { XhrIoPool } from './xhriopool';\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  FirebaseAuthTokenData\n} from '@firebase/app-types/private';\n\n/**\n * @param app If null, getAuthToken always resolves with null.\n * @param service The storage service associated with this auth wrapper.\n *     Untyped to avoid circular type dependencies.\n * @struct\n */\nexport class AuthWrapper {\n  private app_: FirebaseApp | null;\n  private bucket_: string | null = null;\n\n  /**\n  maker\n     */\n  private storageRefMaker_: (p1: AuthWrapper, p2: Location) => Reference;\n  private requestMaker_: requestMaker;\n  private pool_: XhrIoPool;\n  private service_: Service;\n  private maxOperationRetryTime_: number;\n  private maxUploadRetryTime_: number;\n  private requestMap_: RequestMap;\n  private deleted_: boolean = false;\n\n  constructor(\n    app: FirebaseApp | null,\n    maker: (p1: AuthWrapper, p2: Location) => Reference,\n    requestMaker: requestMaker,\n    service: Service,\n    pool: XhrIoPool\n  ) {\n    this.app_ = app;\n    if (this.app_ !== null) {\n      let options = this.app_.options;\n      if (type.isDef(options)) {\n        this.bucket_ = AuthWrapper.extractBucket_(options);\n      }\n    }\n    this.storageRefMaker_ = maker;\n    this.requestMaker_ = requestMaker;\n    this.pool_ = pool;\n    this.service_ = service;\n    this.maxOperationRetryTime_ = constants.DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this.maxUploadRetryTime_ = constants.DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this.requestMap_ = new RequestMap();\n  }\n\n  private static extractBucket_(config: {\n    [prop: string]: any;\n  }): string | null {\n    let bucketString = config[constants.CONFIG_STORAGE_BUCKET_KEY] || null;\n    if (bucketString == null) {\n      return null;\n    }\n    let loc: Location = Location.makeFromBucketSpec(bucketString);\n    return loc.bucket;\n  }\n\n  getAuthToken(): Promise<string | null> {\n    // TODO(andysoto): remove ifDef checks after firebase-app implements stubs\n    // (b/28673818).\n    if (\n      this.app_ !== null &&\n      type.isDef((this.app_ as _FirebaseApp).INTERNAL) &&\n      type.isDef((this.app_ as _FirebaseApp).INTERNAL.getToken)\n    ) {\n      return (this.app_ as _FirebaseApp).INTERNAL.getToken().then(\n        function(response: FirebaseAuthTokenData | null): string | null {\n          if (response !== null) {\n            return response.accessToken;\n          } else {\n            return null;\n          }\n        },\n        function(_error) {\n          return null;\n        }\n      );\n    } else {\n      return promiseimpl.resolve(null) as Promise<string | null>;\n    }\n  }\n\n  bucket(): string | null {\n    if (this.deleted_) {\n      throw errorsExports.appDeleted();\n    } else {\n      return this.bucket_;\n    }\n  }\n\n  /**\n   * The service associated with this auth wrapper. Untyped to avoid circular\n   * type dependencies.\n   */\n  service(): Service {\n    return this.service_;\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\n   * at the given Location.\n   * @param loc The Location.\n   * @return Actually a firebaseStorage.Reference, typing not allowed\n   *     because of circular dependency problems.\n   */\n  makeStorageReference(loc: Location): Reference {\n    return this.storageRefMaker_(this, loc);\n  }\n\n  makeRequest<T>(\n    requestInfo: RequestInfo<T>,\n    authToken: string | null\n  ): Request<T> {\n    if (!this.deleted_) {\n      let request = this.requestMaker_(requestInfo, authToken, this.pool_);\n      this.requestMap_.addRequest(request);\n      return request;\n    } else {\n      return new FailRequest(errorsExports.appDeleted());\n    }\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  deleteApp() {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requestMap_.clear();\n  }\n\n  maxUploadRetryTime(): number {\n    return this.maxUploadRetryTime_;\n  }\n\n  setMaxUploadRetryTime(time: number) {\n    this.maxUploadRetryTime_ = time;\n  }\n\n  maxOperationRetryTime(): number {\n    return this.maxOperationRetryTime_;\n  }\n\n  setMaxOperationRetryTime(time: number) {\n    this.maxOperationRetryTime_ = time;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport firebase from '@firebase/app';\nimport * as array from './array';\nimport * as backoff from './backoff';\nimport * as errorsExports from './error';\nimport { FirebaseStorageError } from './error';\nimport * as object from './object';\nimport * as promiseimpl from './promise_external';\nimport { RequestInfo } from './requestinfo';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport * as XhrIoExports from './xhrio';\nimport { Headers, XhrIo } from './xhrio';\nimport { XhrIoPool } from './xhriopool';\n\n/**\n * @template T\n */\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\n/**\n * @struct\n * @template T\n */\nclass NetworkRequest<T> implements Request<T> {\n  private url_: string;\n  private method_: string;\n  private headers_: Headers;\n  private body_: string | Blob | Uint8Array | null;\n  private successCodes_: number[];\n  private additionalRetryCodes_: number[];\n  private pendingXhr_: XhrIo | null = null;\n  private backoffId_: backoff.id | null = null;\n  private resolve_: Function | null = null;\n  private reject_: Function | null = null;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private callback_: (p1: XhrIo, p2: string) => T;\n  private errorCallback_:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null;\n  private progressCallback_: ((p1: number, p2: number) => void) | null;\n  private timeout_: number;\n  private pool_: XhrIoPool;\n  promise_: Promise<T>;\n\n  constructor(\n    url: string,\n    method: string,\n    headers: Headers,\n    body: string | Blob | Uint8Array | null,\n    successCodes: number[],\n    additionalRetryCodes: number[],\n    callback: (p1: XhrIo, p2: string) => T,\n    errorCallback:\n      | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n      | null,\n    timeout: number,\n    progressCallback: ((p1: number, p2: number) => void) | null,\n    pool: XhrIoPool\n  ) {\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    let self = this;\n    this.promise_ = promiseimpl.make(function(resolve, reject) {\n      self.resolve_ = resolve;\n      self.reject_ = reject;\n      self.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_() {\n    let self = this;\n\n    function doTheRequest(\n      backoffCallback: (p1: boolean, ...p2: any[]) => void,\n      canceled: boolean\n    ) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      let xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent: ProgressEvent) {\n        let loaded = progressEvent.loaded;\n        let total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      }\n      xhr\n        .send(self.url_, self.method_, self.body_, self.headers_)\n        .then(function(xhr: XhrIo) {\n          if (self.progressCallback_ !== null) {\n            xhr.removeUploadProgressListener(progressListener);\n          }\n          self.pendingXhr_ = null;\n          xhr = xhr as XhrIo;\n          let hitServer =\n            xhr.getErrorCode() === XhrIoExports.ErrorCode.NO_ERROR;\n          let status = xhr.getStatus();\n          if (!hitServer || self.isRetryStatusCode_(status)) {\n            let wasCanceled =\n              xhr.getErrorCode() === XhrIoExports.ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          let successCode = array.contains(self.successCodes_, status);\n          backoffCallback(true, new RequestEndStatus(successCode, xhr));\n        });\n    }\n\n    /**\n     * @param requestWentThrough True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    function backoffDone(\n      requestWentThrough: boolean,\n      status: RequestEndStatus\n    ) {\n      let resolve = self.resolve_ as Function;\n      let reject = self.reject_ as Function;\n      let xhr = status.xhr as XhrIo;\n      if (status.wasSuccessCode) {\n        try {\n          let result = self.callback_(xhr, xhr.getResponseText());\n          if (type.isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          let err = errorsExports.unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            let err = self.appDelete_\n              ? errorsExports.appDeleted()\n              : errorsExports.canceled();\n            reject(err);\n          } else {\n            let err = errorsExports.retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = backoff.start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise() {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      backoff.stop(this.backoffId_);\n    }\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  }\n\n  private isRetryStatusCode_(status: number): boolean {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    let isFiveHundredCode = status >= 500 && status < 600;\n    let extraRetryCodes = [\n      // Request Timeout: web server didn't receive full request in time.\n      408,\n      // Too Many Requests: you're getting rate-limited, basically.\n      429\n    ];\n    let isExtraRetryCode = array.contains(extraRetryCodes, status);\n    let isRequestSpecificRetryCode = array.contains(\n      this.additionalRetryCodes_,\n      status\n    );\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled Defaults to false.\n * @struct\n */\nexport class RequestEndStatus {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public xhr: XhrIo | null,\n    opt_canceled?: boolean\n  ) {\n    this.canceled = !!opt_canceled;\n  }\n}\n\nexport function addAuthHeader_(headers: Headers, authToken: string | null) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(headers: Headers) {\n  let number =\n    typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + number;\n}\n\n/**\n * @template T\n */\nexport function makeRequest<T>(\n  requestInfo: RequestInfo<T>,\n  authToken: string | null,\n  pool: XhrIoPool\n): Request<T> {\n  let queryPart = UrlUtils.makeQueryString(requestInfo.urlParams);\n  let url = requestInfo.url + queryPart;\n  let headers = object.clone<Headers>(requestInfo.headers);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest<T>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    pool\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nexport function start(\n  f: (\n    p1: (success: boolean, ...rest: any[]) => void,\n    canceled: boolean\n  ) => void,\n  callback: Function,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  let timeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  function triggerCallback() {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, arguments);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    timeoutId = setTimeout(function() {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function handler(success: boolean, ...var_args: any[]): void {\n    if (triggeredCallback) {\n      return;\n    }\n    if (success) {\n      triggerCallback.apply(null, arguments);\n      return;\n    }\n    let mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      triggerCallback.apply(null, arguments);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    if (triggeredCallback) {\n      return;\n    }\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  setTimeout(function() {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id) {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport * as args from './implementation/args';\nimport { AuthWrapper } from './implementation/authwrapper';\nimport { Location } from './implementation/location';\nimport * as fbsPromiseImpl from './implementation/promise_external';\nimport * as RequestExports from './implementation/request';\nimport { XhrIoPool } from './implementation/xhriopool';\nimport { Reference } from './reference';\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n *\n * @struct\n */\nexport class Service {\n  authWrapper_: AuthWrapper;\n  private app_: FirebaseApp;\n  private bucket_: Location | null = null;\n  private internals_: ServiceInternals;\n\n  constructor(app: FirebaseApp, pool: XhrIoPool, url?: string) {\n    function maker(authWrapper: AuthWrapper, loc: Location) {\n      return new Reference(authWrapper, loc);\n    }\n    this.authWrapper_ = new AuthWrapper(\n      app,\n      maker,\n      RequestExports.makeRequest,\n      this,\n      pool\n    );\n    this.app_ = app;\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      const authWrapperBucket = this.authWrapper_.bucket();\n      if (authWrapperBucket != null) {\n        this.bucket_ = new Location(authWrapperBucket, '');\n      }\n    }\n    this.internals_ = new ServiceInternals(this);\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n  ref(path?: string): Reference {\n    function validator(path: string) {\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n    args.validate('ref', [args.stringSpec(validator, true)], arguments);\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    let ref = new Reference(this.authWrapper_, this.bucket_);\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n  refFromURL(url: string): Reference {\n    function validator(p: string) {\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n    args.validate('refFromURL', [args.stringSpec(validator, false)], arguments);\n    return new Reference(this.authWrapper_, url);\n  }\n\n  get maxUploadRetryTime(): number {\n    return this.authWrapper_.maxUploadRetryTime();\n  }\n\n  setMaxUploadRetryTime(time: number) {\n    args.validate(\n      'setMaxUploadRetryTime',\n      [args.nonNegativeNumberSpec()],\n      arguments\n    );\n    this.authWrapper_.setMaxUploadRetryTime(time);\n  }\n\n  setMaxOperationRetryTime(time: number) {\n    args.validate(\n      'setMaxOperationRetryTime',\n      [args.nonNegativeNumberSpec()],\n      arguments\n    );\n    this.authWrapper_.setMaxOperationRetryTime(time);\n  }\n\n  get app(): FirebaseApp {\n    return this.app_;\n  }\n\n  get INTERNAL(): ServiceInternals {\n    return this.internals_;\n  }\n}\n\n/**\n * @struct\n */\nexport class ServiceInternals {\n  service_: Service;\n\n  constructor(service: Service) {\n    this.service_ = service;\n  }\n\n  /**\n   * Called when the associated app is deleted.\n   * @see {!fbs.AuthWrapper.prototype.deleteApp}\n   */\n  delete(): Promise<void> {\n    this.service_.authWrapper_.deleteApp();\n    return fbsPromiseImpl.resolve<void>(undefined);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  FirebaseServiceFactory,\n  _FirebaseNamespace\n} from '@firebase/app-types/private';\nimport { StringFormat } from './src/implementation/string';\nimport { TaskEvent } from './src/implementation/taskenums';\nimport { TaskState } from './src/implementation/taskenums';\nimport { XhrIoPool } from './src/implementation/xhriopool';\nimport { Reference } from './src/reference';\nimport { Service } from './src/service';\nimport * as types from '@firebase/storage-types';\n\n/**\n * Type constant for Firebase Storage.\n */\nconst STORAGE_TYPE = 'storage';\n\nfunction factory(\n  app: FirebaseApp,\n  unused: any,\n  opt_url?: string\n): types.FirebaseStorage {\n  return new Service(app, new XhrIoPool(), opt_url) as any;\n}\n\nexport function registerStorage(instance: _FirebaseNamespace) {\n  let namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: Service,\n    Reference: Reference\n  };\n  instance.INTERNAL.registerService(\n    STORAGE_TYPE,\n    factory as FirebaseServiceFactory,\n    namespaceExports,\n    undefined,\n    // Allow multiple storage instances per app.\n    true\n  );\n}\n\nregisterStorage(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior for `registerStorage`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    storage?: {\n      (app?: FirebaseApp): types.FirebaseStorage;\n      Storage: typeof types.FirebaseStorage;\n\n      StringFormat: {\n        BASE64: types.StringFormat;\n        BASE64URL: types.StringFormat;\n        DATA_URL: types.StringFormat;\n        RAW: types.StringFormat;\n      };\n      TaskEvent: {\n        STATE_CHANGED: types.TaskEvent;\n      };\n      TaskState: {\n        CANCELED: types.TaskState;\n        ERROR: types.TaskState;\n        PAUSED: types.TaskState;\n        RUNNING: types.TaskState;\n        SUCCESS: types.TaskState;\n      };\n    };\n  }\n  interface FirebaseApp {\n    storage?(storageBucket?: string): types.FirebaseStorage;\n  }\n}\n"],"names":["__generator","thisArg","body","f","y","t","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","done","value","pop","length","push","e","step","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","code","message","code_","prependCode","message_","serverResponse_","name_","FirebaseStorageError","codeProp","serverResponse","Object","Code","UNKNOWN","OBJECT_NOT_FOUND","BUCKET_NOT_FOUND","PROJECT_NOT_FOUND","QUOTA_EXCEEDED","UNAUTHENTICATED","UNAUTHORIZED","RETRY_LIMIT_EXCEEDED","INVALID_CHECKSUM","CANCELED","INVALID_EVENT_NAME","INVALID_URL","INVALID_DEFAULT_BUCKET","NO_DEFAULT_BUCKET","CANNOT_SLICE_BLOB","SERVER_FILE_WRONG_SIZE","NO_DOWNLOAD_URL","INVALID_ARGUMENT","INVALID_ARGUMENT_COUNT","APP_DELETED","INVALID_ROOT_OPERATION","INVALID_FORMAT","INTERNAL_ERROR","unknown","canceled","cannotSliceBlob","invalidArgument","index","fnName","appDeleted","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","formatValidator","stringFormat","data","opt_contentType","contentType","dataFromString","string","StringData","utf8Bytes_","base64Bytes_","parts","DataURLParts","base64","rest","decoded","decodeURIComponent","errorsExports.invalidFormat","percentEncodedBytes_","errorsExports.unknown","b","i","c","charCodeAt","Uint8Array","hasMinus","indexOf","hasUnder","hasPlus","hasSlash","replace","bytes","atob","array","dataURL","matches","match","s","end","middle","substring","ErrorCode","TaskEvent","STATE_CHANGED","InternalTaskState","TaskState","RUNNING","PAUSED","SUCCESS","ERROR","taskStateFromInternalTaskState","state","forEach","obj","key","prop","prototype","hasOwnProperty","clone","val","make","resolver","Promise","resolve","isDef","p","isJustDef","isFunction","isObject","isString","String","isNumber","Number","isNativeBlob","isNativeBlobDefined","Blob","xhr_","XMLHttpRequest","errorCode_","XhrIoExports.ErrorCode","NO_ERROR","sendPromise_","promiseimpl.make","reject","_this","addEventListener","event","ABORT","NETWORK_ERROR","NetworkXhrIo","url","method","opt_body","opt_headers","sent_","errorsExports.internalError","open","type.isDef","object.forEach","setRequestHeader","toString","send","status","responseText","abort","header","getResponseHeader","listener","upload","removeEventListener","XhrIoPool","jsonObjectOrNull","JSON","parse","Array","isArray","bucket","path","path_","Location","encode","encodeURIComponent","bucketString","bucketLocation","makeFromUrl","location","bucketDomain","gsRegex","RegExp","hostRegex","groups","regex","indices","postModify","loc","charAt","slice","group","captures","exec","bucketValue","pathValue","lastComponent","lastIndexOf","makeUrl","urlPart","makeQueryString","params","queryPart","nextPart","noXform_","metadata","server","opt_local","opt_writable","opt_xform","local","writable","xform","mappings_","getMappings","mappings","Mapping","nameMapping","fullPath","type.isString","path.lastComponent","sizeMapping","size","fromResource","authWrapper","resource","type","len","mapping","defineProperty","get","makeStorageReference","fromResourceString","resourceString","json.jsonObjectOrNull","toResourceString","stringify","metadataValidator","type.isObject","MAX_RESULTS_KEY","MAX_MAX_RESULTS","PAGE_TOKEN_KEY","PREFIXES_KEY","ITEMS_KEY","fromBackendResponse","listResult","prefixes","items","nextPageToken","_a","_i","pathWithoutTrailingSlash","reference","_c","_b","item","listOptionsValidator","isInteger","validate","name","specs","passed","minArgs","maxArgs","optional","argMin","argMax","real","countPart","plural","validator","Error","errorsExports.invalidArgument","opt_optional","self","type.isJustDef","stringSpec","opt_validator","stringValidator","v1","v2","ArgSpec","metadataSpec","MetadataUtils.metadataValidator","nonNegativeNumberSpec","type.isNumber","looseObjectSpec","nullFunctionSpec","type.isFunction","getBlob","var_args","BlobBuilder","WebKitBlobBuilder","undefined","bb","append","type.isNativeBlobDefined","opt_elideCopy","blobType","type.isNativeBlob","data_","ArrayBuffer","byteLength","set","size_","type_","FbsBlob","startByte","endByte","realBlob","sliced","start","blob","webkitSlice","mozSlice","buffer","blobby","map","fs.getBlob","apply","uint8Arrays","string.dataFromString","finalLength_1","merged_1","index_1","contains","elem","handler","timeout","handlerCheck","cndn","metadataHandler","xhr","text","MetadataUtils.fromResourceString","listHandler","downloadUrlHandler","tokens","split","token","UrlUtils.makeUrl","UrlUtils.makeQueryString","alt","MetadataUtils.downloadUrlFromResourceString","sharedErrorHandler","err","newErr","getStatus","setServerResponseProp","serverResponseProp","objectErrorHandler","shared","getMetadata","fullServerUrl","maxOperationRetryTime","requestInfo","RequestInfo","errorHandler","metadataForUpload_","opt_metadata","object.clone","current","total","finalized","checkResumeHeader_","opt_allowed","array.contains","continueResumableUpload","chunkSize","opt_status","opt_progressCallback","ResumableUploadStatus","bytesLeft","bytesToUpload","Math","min","headers","X-Goog-Upload-Command","X-Goog-Upload-Offset","errorsExports.cannotSliceBlob","maxUploadRetryTime","uploadStatus","newCurrent","uploadData","progressCallback","nextOrObserver","opt_error","opt_complete","error","complete","observer","bytesTransferred","totalBytes","task","ref","async","argsToForward","promiseimpl.resolve","then","ref_","authWrapper_","location_","blob_","metadata_","resumable_","shouldDoResumable_","state_","errorHandler_","request_","chunkMultiplier_","codeEquals","errors.Code","needToFetchStatus_","completeTransitions_","error_","transition_","metadataErrorHandler_","promise_","fbsPromiseimpl.make","resolve_","reject_","start_","UploadTask","sizeBefore","transferred_","loaded","updateProgress_","uploadUrl_","createResumable_","fetchStatus_","needToFetchMetadata_","fetchMetadata_","continueUpload_","oneShotUpload_","callback","getAuthToken","authToken","resolveToken_","urlParams","bucketOnlyServerUrl","X-Goog-Upload-Protocol","X-Goog-Upload-Header-Content-Length","X-Goog-Upload-Header-Content-Type","Content-Type","MetadataUtils.toResourceString","createRequest","makeRequest","getPromise","sizeString","parseInt","isNaN","statusRequest","fbsRequests.ResumableUploadStatus","fbsRequests.continueResumableUpload","makeProgressCallback_","uploadRequest","newStatus","increaseMultiplier_","fbsRequests.getMetadata","metadataRequest","boundary","str","random","genBoundary","preBlobPart","postBlobPart","fbsRequests.multipartUpload","multipartRequest","transferred","old","notifyObservers_","cancel","wasPaused","errors.canceled","externalState","fbsTaskEnums.taskStateFromInternalTaskState","UploadTaskSnapshot","completed","nextOrObserverMessage","nextValidator","fbsArgs.nullFunctionSpec","observerValidator","fbsArgs.looseObjectSpec","nextOrObserverValidator","typeUtils.isJustDef","fbsArgs.validate","fbsArgs.stringSpec","_p","arguments","makeBinder","Observer","addObserver_","removeObserver_","binderSpecs","onFulfilled","onRejected","observers_","notifyObserver_","splice","arraylike","finishPromise_","triggered","fbsAsync","bind","snapshot","valid","Reference","args.validate","metadata.getMappings","childPath","args.stringSpec","canonicalChildPath","newPath","filter","component","join","newRef","path.parent","service","args.metadataSpec","throwIfRoot_","fbsString.formatValidator","fbsString.dataFromString","successCodes","accumulator","listAllHelper","pageToken","generator","opt","list","nextPage","P","_arguments","fulfilled","rejected","result","options","ListOptionsUtils.listOptionsValidator","delimiter","maxResults","isRoot","requests.list","requests.getMetadata","FailRequest","appDelete","id_","RequestMap","r","id","map_","unmap","app","maker","requestMaker","pool","app_","bucket_","AuthWrapper","extractBucket_","storageRefMaker_","requestMaker_","pool_","service_","maxOperationRetryTime_","maxUploadRetryTime_","requestMap_","config","constants.CONFIG_STORAGE_BUCKET_KEY","makeFromBucketSpec","INTERNAL","getToken","response","accessToken","_error","deleted_","errorsExports.appDeleted","request","addRequest","clear","time","additionalRetryCodes","errorCallback","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","NetworkRequest","backoffDone","requestWentThrough","wasSuccessCode","getResponseText","appDelete_","errorsExports.canceled","canceled_","RequestEndStatus","backoffId_","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","success","stopped","stop","wasTimeout","clearTimeout","backoff.start","backoffCallback","createXhrIo","pendingXhr_","addUploadProgressListener","progressListener","removeUploadProgressListener","hitServer","getErrorCode","isRetryStatusCode_","successCode","wasCanceled","progressEvent","lengthComputable","backoff.stop","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","opt_canceled","number","firebase","SDK_VERSION","namespaceExports","RequestExports.makeRequest","authWrapperBucket","internals_","ServiceInternals","Service","test","child","args.nonNegativeNumberSpec","setMaxUploadRetryTime","setMaxOperationRetryTime","deleteApp","fbsPromiseImpl.resolve","factory","unused","opt_url","Storage","registerService"],"mappings":"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"}